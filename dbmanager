#!/bin/bash

# =======================
#  DB Manager (CLI + Interactive)
# =======================

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Progress bar
progress_bar() {
    echo -ne "${CYAN}"
    for i in {1..20}; do
        echo -ne "‚ñá"
        sleep 0.05
    done
    echo -e "${NC}"
}

# Usage help
usage() {
    echo -e "${YELLOW}Usage:${NC}"
    echo "  $0 -c|-d -p|-m dbname username [password]"
    echo ""
    echo -e "${CYAN}Options:${NC}"
    echo "  -c             Create database & user"
    echo "  -d             Delete database & user"
    echo "  -p             Use PostgreSQL"
    echo "  -m             Use MySQL"
    echo "  -h             Show this help"
    echo ""
    echo -e "${GREEN}Examples:${NC}"
    echo "  $0 -c -p mydb myuser mypass"
    echo "  $0 -d -m mydb myuser"
    exit 1
}

# =======================
# Parse Args (CLI mode)
# =======================
action=""
db_type=""

if [[ $# -gt 0 ]]; then
    while getopts "cdpmh" opt; do
        case $opt in
            c) action="create" ;;
            d) action="delete" ;;
            p) db_type="postgres" ;;
            m) db_type="mysql" ;;
            h) usage ;;
            *) usage ;;
        esac
    done

    shift $((OPTIND-1))

    db_name=$1
    db_user=$2
    db_pass=$3

    # Validate
    if [[ -z "$action" || -z "$db_type" ]]; then
        usage
    fi

    if [[ "$action" == "create" && ( -z "$db_name" || -z "$db_user" || -z "$db_pass" ) ]]; then
        echo -e "${RED}‚ùå Missing arguments for create.${NC}"
        usage
    fi

    if [[ "$action" == "delete" && ( -z "$db_name" || -z "$db_user" ) ]]; then
        echo -e "${RED}‚ùå Missing arguments for delete.${NC}"
        usage
    fi
else
    # =======================
    # Interactive Mode
    # =======================
    echo -e "${YELLOW}==========================================${NC}"
    echo -e "${CYAN}     üöÄ Interactive Database Manager${NC}"
    echo -e "${YELLOW}==========================================${NC}"
    echo ""

    echo -e "${GREEN}Select the database type:${NC}"
    select db_type in "postgres" "mysql"; do
        case $db_type in
            postgres ) break;;
            mysql ) break;;
            * ) echo -e "${RED}Invalid option. Please select 1 or 2.${NC}";;
        esac
    done

    echo ""
    echo -e "${GREEN}Select the operation:${NC}"
    select action in "create" "delete"; do
        case $action in
            create ) break;;
            delete ) break;;
            * ) echo -e "${RED}Invalid option. Please select 1 or 2.${NC}";;
        esac
    done

    echo ""
    read -p "üì¶ Enter database name: " db_name
    read -p "üë§ Enter username: " db_user

    if [ "$action" == "create" ]; then
        read -s -p "üîë Enter password for the new user: " db_pass
        echo ""
        read -s -p "üîë Confirm password: " db_pass2
        echo ""
        if [ "$db_pass" != "$db_pass2" ]; then
            echo -e "${RED}‚ùå Passwords do not match. Exiting.${NC}"
            exit 1
        fi
    fi
fi

# =======================
# PostgreSQL
# =======================
if [ "$db_type" == "postgres" ]; then
    if [ "$action" == "create" ]; then
        echo -e "${YELLOW}‚öôÔ∏è Creating PostgreSQL database and user...${NC}"
        progress_bar
        sudo -i -u postgres psql <<EOF
CREATE DATABASE $db_name;
CREATE USER $db_user WITH ENCRYPTED PASSWORD '$db_pass';
GRANT ALL PRIVILEGES ON DATABASE $db_name TO $db_user;
EOF
        echo -e "${GREEN}‚úÖ PostgreSQL database '$db_name' and user '$db_user' created.${NC}"
    else
        echo -e "${RED}‚ö†Ô∏è You are about to delete PostgreSQL database '$db_name' and user '$db_user'.${NC}"
        read -p "‚ùì Are you sure? (y/N): " confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}‚öôÔ∏è Deleting PostgreSQL database and user...${NC}"
            progress_bar
            sudo -i -u postgres psql <<EOF
DROP DATABASE IF EXISTS $db_name;
DROP USER IF EXISTS $db_user;
EOF
            echo -e "${GREEN}üóëÔ∏è PostgreSQL database '$db_name' and user '$db_user' deleted.${NC}"
        else
            echo -e "${CYAN}‚ùå Deletion cancelled.${NC}"
        fi
    fi
fi

# =======================
# MySQL
# =======================
if [ "$db_type" == "mysql" ]; then
    if [ "$action" == "create" ]; then
        echo -e "${YELLOW}‚öôÔ∏è Creating MySQL database and user...${NC}"
        echo -e "${CYAN}üëâ You will now be asked for the MySQL root password.${NC}"
        progress_bar
        mysql -u root -p <<EOF
CREATE DATABASE \`$db_name\`;
CREATE USER '$db_user'@'localhost' IDENTIFIED BY '$db_pass';
GRANT ALL PRIVILEGES ON \`$db_name\`.* TO '$db_user'@'localhost';
FLUSH PRIVILEGES;
EOF
        echo -e "${GREEN}‚úÖ MySQL database '$db_name' and user '$db_user' created.${NC}"
    else
        echo -e "${RED}‚ö†Ô∏è You are about to delete MySQL database '$db_name' and user '$db_user'.${NC}"
        read -p "‚ùì Are you sure? (y/N): " confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            echo -e "${YELLOW}‚öôÔ∏è Deleting MySQL database and user...${NC}"
            echo -e "${CYAN}üëâ You will now be asked for the MySQL root password.${NC}"
            progress_bar
            mysql -u root -p <<EOF
DROP DATABASE IF EXISTS \`$db_name\`;
DROP USER IF EXISTS '$db_user'@'localhost';
FLUSH PRIVILEGES;
EOF
            echo -e "${GREEN}üóëÔ∏è MySQL database '$db_name' and user '$db_user' deleted.${NC}"
        else
            echo -e "${CYAN}‚ùå Deletion cancelled.${NC}"
        fi
    fi
fi
